import{_ as n,o as s,c as a,e}from"./app-03679ccd.js";const o={},t=e(`<h1 id="二、变量和常量" tabindex="-1"><a class="header-anchor" href="#二、变量和常量" aria-hidden="true">#</a> 二、变量和常量</h1><h2 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h2><h3 id="_1-匿名变量" tabindex="-1"><a class="header-anchor" href="#_1-匿名变量" aria-hidden="true">#</a> 1.匿名变量</h3><p><strong>匿名变量不占用命名空间，不会分配内存</strong>，所以匿名变量之间不存在重复声明。（<em>在 Lua 等编程语言里，匿名变量也被叫做哑元变量。</em>）</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&quot;kiss&quot;</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	x<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token boolean">_</span><span class="token punctuation">,</span> y <span class="token operator">:=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;x=&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;y=&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常量" tabindex="-1"><a class="header-anchor" href="#常量" aria-hidden="true">#</a> 常量</h2><p>省略则表示和上面一行的值相同：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">const</span> <span class="token punctuation">(</span>
  n1 <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment">// 100</span>
  n2       <span class="token comment">// 100</span>
  n3       <span class="token comment">// 100</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-iota" tabindex="-1"><a class="header-anchor" href="#_1-iota" aria-hidden="true">#</a> 1. iota</h3><blockquote><p><code>iota</code> 是 go 语言的常量计数器，只能在常量的表达式中使用。</p></blockquote><ol><li>例子</li></ol><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">const</span> <span class="token punctuation">(</span>
  n1 <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token comment">// 0</span>
  n2        <span class="token comment">// 1</span>
  n3        <span class="token comment">// 2</span>
  n4        <span class="token comment">// 3</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>使用 <code>_</code> 跳过某些值</li></ol><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">const</span> <span class="token punctuation">(</span>
  n1 <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token comment">// 0</span>
  n2        <span class="token comment">// 1</span>
  <span class="token boolean">_</span>
  n4        <span class="token comment">// 3</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li><code>iota</code> 声明中间插队</li></ol><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">const</span> <span class="token punctuation">(</span>
  n1 <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token comment">// 0</span>
  n2 <span class="token operator">=</span> <span class="token number">100</span>  <span class="token comment">// 100</span>
  n3 <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token comment">// 2</span>
  n4        <span class="token comment">// 3</span>
<span class="token punctuation">)</span>
<span class="token keyword">const</span> n5 <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token comment">//0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>定义数量级</li></ol><p><code>1 &lt;&lt; 10</code> 表示将1的二进制表示向左移10位，也就是由1变成了10000000000，也就是十进制的1024。同理 <code>2 &lt;&lt; 2</code> 表示将2的二进制表示向左移2位，也就是由10变成了1000，也就是十进制的8。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">const</span> <span class="token punctuation">(</span>
  <span class="token boolean">_</span>  <span class="token operator">=</span> <span class="token boolean">iota</span>
  KB <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token boolean">iota</span><span class="token punctuation">)</span>
  MB <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token boolean">iota</span><span class="token punctuation">)</span>
  GB <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token boolean">iota</span><span class="token punctuation">)</span>
  TB <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token boolean">iota</span><span class="token punctuation">)</span>
  PB <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token boolean">iota</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>多个 iota 定义在一行</li></ol><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">const</span> <span class="token punctuation">(</span>
  a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token boolean">iota</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">iota</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token comment">// 1, 2</span>
  c<span class="token punctuation">,</span> d                      <span class="token comment">// 2, 3</span>
  e<span class="token punctuation">,</span> f                      <span class="token comment">// 3, 4</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),p=[t];function l(c,i){return s(),a("div",null,p)}const r=n(o,[["render",l],["__file","var.html.vue"]]);export{r as default};
