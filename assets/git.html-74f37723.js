import{_ as e,o as a,c as i,e as t}from"./app-03679ccd.js";const n={},s=t(`<h1 id="git-相关" tabindex="-1"><a class="header-anchor" href="#git-相关" aria-hidden="true">#</a> Git 相关</h1><h2 id="游离分支" tabindex="-1"><a class="header-anchor" href="#游离分支" aria-hidden="true">#</a> 游离分支</h2><p>Git中的游离分支（Detached HEAD）是指切换到某个提交时，HEAD指针指向的不是一个分支，而是直接指向该提交。通常有以下几种情况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> chekcout <span class="token operator">&lt;</span>commit<span class="token operator">&gt;</span>
<span class="token function">git</span> checkout tag_name 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>查看某个提交的内容</li><li>切换到某个 Tag 或特定的提交</li><li>在没有创建分支的情况下进行提交</li></ul><p>HEAD处于游离状态时，任何新的提交都不会被分支所记录。</p><h2 id="git-log-和-git-reflog" tabindex="-1"><a class="header-anchor" href="#git-log-和-git-reflog" aria-hidden="true">#</a> git log 和 git reflog</h2><ul><li><code>git log</code> 查看提交历史，包括所有分支和标签的提交记录。</li><li><code>git reflog</code> 查看所有操作记录，包括已经被删除的提交。</li></ul>`,8),l=[s];function o(c,r){return a(),i("div",null,l)}const h=e(n,[["render",o],["__file","git.html.vue"]]);export{h as default};
